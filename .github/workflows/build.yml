name: CI example 
on: 
  push:
        branches: main
jobs:
  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code  
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      # - name: Get the version
      #   id: get_version
      #   run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Get Version
        id: get_version
        run: |
          VERSION="Hello World"
          echo "Output [$VERSION]"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT 
      - name: Print Version
        id: print_version
        run: echo "[${{ steps.get_version.outputs.VERSION }}]"
      # - name: Test, Build, Pacakge with Maven
      #   run: mvn --batch-mode -Drevision=${{ steps.get_version.outputs.VERSION }} --update-snapshots package
      # - name: Bump version and push tag
      #   uses: anothrNick/github-tag-action@1.64.0 # Don't use @master or @v1 unless you're happy to test the latest version
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     WITH_V: true
      #     DEFAULT_BUMP: minor
      # - name: Create GitHub release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v0.4.0
      #     release_name: Release v0.4.0
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./target/example-ci-${{ steps.get_version.outputs.VERSION }}.jar
      #     asset_name: example-ci-${{ steps.get_version.outputs.VERSION }}.jar
      #     asset_content_type: application/java-archive

